{"version":3,"file":"websocket.bundle.js","mappings":"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","sources":["webpack://backend/webpack/bootstrap","webpack://backend/webpack/runtime/define property getters","webpack://backend/webpack/runtime/hasOwnProperty shorthand","webpack://backend/webpack/runtime/make namespace object","webpack://backend/./node_modules/engine.io-parser/build/esm/commons.js","webpack://backend/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://backend/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://backend/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://backend/./node_modules/engine.io-parser/build/esm/index.js","webpack://backend/./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack://backend/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://backend/./node_modules/engine.io-client/build/esm/util.js","webpack://backend/./node_modules/engine.io-client/build/esm/transport.js","webpack://backend/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://backend/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://backend/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://backend/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://backend/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://backend/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://backend/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://backend/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://backend/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://backend/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://backend/./node_modules/engine.io-client/build/esm/socket.js","webpack://backend/./node_modules/engine.io-client/build/esm/index.js","webpack://backend/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://backend/./node_modules/socket.io-parser/build/esm/binary.js","webpack://backend/./node_modules/socket.io-parser/build/esm/index.js","webpack://backend/./node_modules/socket.io-client/build/esm/on.js","webpack://backend/./node_modules/socket.io-client/build/esm/socket.js","webpack://backend/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://backend/./node_modules/socket.io-client/build/esm/manager.js","webpack://backend/./node_modules/socket.io-client/build/esm/index.js","webpack://backend/./node_modules/socket.io-client/build/esm/url.js","webpack://backend/./public/js/utils.js","webpack://backend/./public/js/websocket.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    // @ts-expect-error\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    // @ts-expect-error\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const foregroundCanvas = document.getElementById('foreground')\r\nforegroundCanvas.width = window.innerWidth;\r\nforegroundCanvas.height = window.innerHeight;\r\n\r\nconst foregroundCtx = foregroundCanvas.getContext('2d');\r\nforegroundCtx.filStyle = \"white\";\r\nforegroundCtx.textAlign = \"center\";\r\n\r\nexport function getpercent(num, percent) {\r\n  return (percent / 100) * num;\r\n}\r\n\r\nexport default function createElement(\r\n  parent,\r\n  elem,\r\n  attribute = {},\r\n  content = null\r\n) {\r\n  const element = document.createElement(elem);\r\n  if (content) {\r\n    element.innerText = content;\r\n  }\r\n\r\n  if (attribute) {\r\n    for (const key in attribute) {\r\n      element.setAttribute(key, attribute[key]);\r\n    }\r\n  }\r\n\r\n  parent.appendChild(element);\r\n  return element;\r\n}\r\n\r\nexport function checkChildOverflow(element) {\r\n  const lastChild = element.lastElementChild;\r\n\r\n  if (!lastChild) {\r\n    return false;\r\n  }\r\n\r\n  const isOverflowing =\r\n    lastChild.offsetLeft + lastChild.offsetWidth > element.clientWidth + 360;\r\n\r\n  return isOverflowing;\r\n}\r\n\r\nexport function getDragAfterElement(container, y) {\r\n  const draggableElements = [\r\n    ...container.querySelectorAll(\".project:not(.dragging)\"),\r\n  ];\r\n\r\n  return draggableElements.reduce(\r\n    (closest, child) => {\r\n      const box = child.getBoundingClientRect();\r\n      const offset = y - box.top - box.height / 2;\r\n      if (offset < 0 && offset > closest.offset) {\r\n        return { offset: offset, element: child };\r\n      } else {\r\n        return closest;\r\n      }\r\n    },\r\n    { offset: Number.NEGATIVE_INFINITY }\r\n  ).element;\r\n}\r\n\r\n\r\nexport function showAlert(text, error=true) {\r\n    const textMetric = foregroundCtx.measureText(text);\r\n    console.log(textMetric.width * 2);\r\n    foregroundCtx.fillStyle = 'rgb(0,0,0, 0.8)';\r\n    foregroundCtx.fillRect(innerWidth * 0.05, innerHeight * 0.4, innerWidth * 0.9, innerHeight * 0.2)\r\n    foregroundCtx.fillStyle = error ? 'red' : 'springgreen';\r\n    foregroundCtx.font = \"bold 20px Monospace\";\r\n    const type = error ? 'error' : 'success';\r\n    foregroundCtx.fillText(type, innerWidth/2, innerHeight/2 - 20);\r\n    foregroundCtx.fillStyle = error ? 'brown' : 'white';\r\n    foregroundCtx.font = \"bold 2vw serif\";\r\n    foregroundCtx.fillText(text, innerWidth/2, innerHeight/2 + 20);\r\n    setTimeout(()=>{\r\n      foregroundCtx.clearRect(0, 0, innerWidth, innerHeight);\r\n    }, textMetric.width < 100 ? textMetric.width * 20 : textMetric.width * 10)\r\n}\r\n\r\n// Function to validate if a link is a Github URL\r\nexport function isGitHubLink(url) {\r\n  const gitHubRegex =\r\n    /^(https?:\\/\\/)?(www\\.)?github\\.com\\/[A-Za-z0-9_-]+\\/[A-Za-z0-9_-]+(\\/)?$/;\r\n  return gitHubRegex.test(url);\r\n}\r\n\r\n// Function to validate if a link is a Figma URL\r\nexport function isFigmaLink(url) {\r\n  const figmaRegex = /^(https?:\\/\\/)?(www\\.)?figma\\.com\\/design\\/[A-Za-z0-9]+\\/[A-Za-z0-9_-]+(\\?.*)?$/;\r\n  return figmaRegex.test(url);\r\n}\r\n\r\n\r\nexport async function fetchJson(url) {\r\n  const response = await fetch(url);\r\n  if (!response.ok) {\r\n    throw new Error(\"Network response was not ok\");\r\n  }\r\n  return response.json();\r\n}","import { io } from \"socket.io-client\";\r\nimport { showAlert } from \"./utils.js\";\r\n\r\nconst socket = io(\"/\", {\r\n    withCredentials: true\r\n})\r\n\r\nsocket.on(\"connected\", () => {\r\n    console.log(\"Connected to the server\");\r\n});\r\n\r\nsocket.on(\"mail-sent\", () => {\r\n    console.log(\"Email sent successfully\");\r\n    showAlert(\"Email sent successfully!\", false);\r\n})\r\n\r\nsocket.on(\"mail-error\", () => {\r\n    console.error(\"Failed to send email\");\r\n    showAlert(\"Failed to send email. Please try again later.\");\r\n});"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","lookup","i","chars","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","prev","seed","num","encoded","Math","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","undefined","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","TransformStream","transform","controller","header","headerArray","DataView","getUint16","view","n","getUint32","pow","enqueue","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","arrayBuffer","TextEncoder","encode","encodePacketToBinary","payloadLength","setUint8","setUint16","setBigUint64","BigInt","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","foregroundCanvas","getElementById","width","innerWidth","height","innerHeight","foregroundCtx","getContext","showAlert","text","textMetric","measureText","console","log","fillStyle","fillRect","font","fillText","clearRect","filStyle","textAlign"],"sourceRoot":""}